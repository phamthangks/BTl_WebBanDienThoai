@model BTLW_BDT.Models.KhachHang
@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}
<!-- Page Header Start -->
<div class="container-fluid bg-secondary mb-5">
    <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 300px">
        <h1 class="font-weight-semi-bold text-uppercase mb-3">THÔNG TIN CÁ NHÂN</h1>
        <div class="d-inline-flex">
            <p class="m-0"><a href="">Home</a></p>
            <p class="m-0 px-2">-</p>
            <p class="m-0">Profile</p>
        </div>
    </div>

</div>
<!-- Page Header End -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-lg-12 mb-5">
            <div class="contact-form">
                <form method="post" action="@Url.Action("UpdateProfile")" enctype="multipart/form-data" class="needs-validation" novalidate>
                    <input type="hidden" name="MaKhachHang" value="@Model.MaKhachHang" />
                    <input type="hidden" name="TenDangNhap" value="@Model.TenDangNhap" />
                    
                    <div class="row">
                        <div class="col-12 col-md-3">
                            <div class="card card-plain">
                                <div class="card-header pb-0 p-3">
                                    <h6 class="mb-0">Ảnh đại diện</h6>
                                </div>
                                <div class="card-body p-3 text-center">
                                    <div class="avatar position-relative mb-3">
                                        @if (!string.IsNullOrEmpty(Model.AnhDaiDien))
                                        {
                                            <img src="@Model.AnhDaiDien" alt="profile_image" id="preview" 
                                                 class="border-radius-lg shadow-sm" style="width: 200px; height: 200px; object-fit: cover; border-radius: 50%;">
                                        }
                                        else
                                        {
                                            <img src="~/Images/Customer/default-avatar.jpg" alt="profile_image" id="preview" 
                                                 class="border-radius-lg shadow-sm" style="width: 200px; height: 200px; object-fit: cover; border-radius: 50%;">
                                        }
                                    </div>
                                    <div class="mt-2">
                                        <label for="imageFile" class="btn btn-outline-primary btn-sm mb-2">
                                            <i class="fas fa-upload me-2"></i> Thay đổi ảnh
                                        </label>
                                        <input type="file" id="imageFile" name="imageFile" class="d-none" accept="image/*" onchange="previewImage(this)">
                                        <div class="text-muted small">Cho phép JPG, JPEG hoặc PNG. Tối đa 5MB</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-12 col-md-9">
                            <div class="card card-plain">
                                <div class="card-header pb-0 p-3 d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0">Thông tin cá nhân</h6>
                                    <button type="submit" class="btn btn-save">
                                        <i class="fas fa-save me-2"></i>Lưu thay đổi
                                    </button>
                                </div>
                                <div class="card-body p-3">
                                    <div class="row g-3">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Mã khách hàng</label>
                                                <input type="text" class="form-control" value="@Model.MaKhachHang" readonly>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Tên khách hàng</label>
                                                <input type="text" class="form-control" name="TenKhachHang" value="@Model.TenKhachHang" required>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Ngày sinh</label>
                                                <input type="date" class="form-control" name="NgaySinh" value="@(Model.NgaySinh?.ToString("yyyy-MM-dd"))" required>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="form-control-label">Số điện thoại</label>
                                                <input type="tel" class="form-control" name="SoDienThoai" value="@Model.SoDienThoai" pattern="^(0)[0-9]{9}$" required>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="form-group">
                                                <label class="form-control-label">Email</label>
                                                <input type="email" class="form-control" name="Email" value="@Model.Email" required>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="mt-4">
                                        <label class="form-control-label">Địa chỉ</label>
                                        <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm địa chỉ..." value="@Model.DiaChi">
                                        <div class="map-container mt-3">
                                            <div id="map"></div>
                                        </div>
                                        <input type="hidden" name="DiaChi" id="formattedAddress" value="@Model.DiaChi">
                                        <input type="hidden" name="DiaChiLatitude" id="latitude" value="@Model.DiaChiLatitude">
                                        <input type="hidden" name="DiaChiLongitude" id="longitude" value="@Model.DiaChiLongitude">
                                    </div>

                                    <div class="form-group mt-3">
                                        <label class="form-control-label">Ghi chú</label>
                                        <textarea class="form-control" name="GhiChu" rows="2">@Model.GhiChu</textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Preview image before upload
        function previewImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    $('#preview').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        // Enable Bootstrap validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}

<style>
    .section-title {
        position: relative;
        display: inline-block;
        letter-spacing: 1px;
        font-weight: bold;
        color: #1C1C1C;
    }

    .section-title span {
        position: relative;
        background: #ffffff;
        z-index: 1;
    }

    .section-title::before {
        position: absolute;
        content: "";
        top: 50%;
        left: 0;
        width: 100%;
        height: 2px;
        margin-top: -1px;
        background: #1C1C1C;
    }

    .card {
        border: none;
        box-shadow: 0 0 15px rgba(0,0,0,.1);
        height: auto;
    }

    .btn-outline-primary {
        color: #DEB887;
        border-color: #DEB887;
    }

    .btn-outline-primary:hover {
        background-color: #DEB887;
        border-color: #DEB887;
        color: white;
    }

    .map-container {
        position: relative;
        width: 100%;
        height: 500px;
        margin: 15px 0;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    #map {
        height: 100%;
        width: 100%;
    }

    #searchInput {
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        border: 1px solid #ddd;
        padding: 10px;
        border-radius: 4px;
        width: 100%;
    }

    .avatar img {
        transition: all 0.3s ease;
        border: 3px solid #DEB887;
        margin: auto;
        display: block;
    }

    .avatar img:hover {
        transform: scale(1.05);
    }

    .btn-outline-primary {
        padding: 10px 20px;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    .card {
        height: 100%;
        transition: all 0.3s ease;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    }

    .card-header {
        border-bottom: 2px solid #DEB887;
    }

    .form-control {
        border: 1px solid #ddd;
        padding: 8px 12px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .form-control:focus {
        border-color: #DEB887;
        box-shadow: 0 0 0 0.2rem rgba(222, 184, 135, 0.25);
    }

    .btn-save {
        background-color: #DEB887;
        color: white;
        padding: 8px 20px;
        border-radius: 5px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .btn-save:hover {
        background-color: #D2691E;
        transform: translateY(-2px);
    }

    .form-control-label {
        font-weight: 500;
        color: #555;
        margin-bottom: 4px;
        font-size: 0.9rem;
    }

    .invalid-feedback {
        font-size: 0.85rem;
    }

    .row.g-3 {
        margin-bottom: 1rem;
    }

    .card-header {
        background-color: transparent;
    }

    .small {
        font-size: 0.8rem;
    }
</style>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBqIm1BH4Z2iXUobBw9w98dpCIIyRLP-QE&libraries=places,geometry"></script>

<script>
    let map, marker, searchBox;
    const shopLocation = { lat: 21.028511, lng: 105.804817 };

    function initMap() {
        // Khởi tạo vị trí ban đầu từ dữ liệu người dùng hoặc vị trí cửa hàng nếu null
        const initialLocation = {
            lat: @(Model.DiaChiLatitude?.ToString() ?? "21.028511"),
            lng: @(Model.DiaChiLongitude?.ToString() ?? "105.804817")
        };

        map = new google.maps.Map(document.getElementById('map'), {
            center: initialLocation,
            zoom: 13
        });

        const input = document.getElementById('searchInput');
        searchBox = new google.maps.places.SearchBox(input);

        marker = new google.maps.Marker({
            map: map,
            position: initialLocation,
            draggable: true
        });

        // Marker shop
        new google.maps.Marker({
            position: shopLocation,
            map: map,
            icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
            title: 'Vị trí shop'
        });

        // Xử lý sự kiện tìm kiếm
        searchBox.addListener('places_changed', () => {
            const places = searchBox.getPlaces();
            if (places.length === 0) return;

            const place = places[0];
            if (!place.geometry || !place.geometry.location) return;

            updateMap(place.geometry.location, place.formatted_address);
        });

        // Xử lý kéo thả marker
        google.maps.event.addListener(marker, 'dragend', function() {
            const position = marker.getPosition();
            geocodePosition(position);
        });
    }

    function updateMap(location, address) {
        map.setCenter(location);
        marker.setPosition(location);

        document.getElementById('formattedAddress').value = address;
        document.getElementById('latitude').value = location.lat();
        document.getElementById('longitude').value = location.lng();
        document.getElementById('searchInput').value = address;

        const distance = google.maps.geometry.spherical.computeDistanceBetween(
            location,
            new google.maps.LatLng(shopLocation.lat, shopLocation.lng)
        );
        
        console.log(`Khoảng cách đến shop: ${(distance/1000).toFixed(2)} km`);
    }

    function geocodePosition(position) {
        const geocoder = new google.maps.Geocoder();
        geocoder.geocode({ location: position }, (results, status) => {
            if (status === 'OK' && results[0]) {
                updateMap(position, results[0].formatted_address);
            }
        });
    }

    // Khởi tạo bản đồ khi trang tải xong
    google.maps.event.addDomListener(window, 'load', initMap);
</script>

